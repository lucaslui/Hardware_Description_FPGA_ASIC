-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\DUC_simulink\DUC_FPGA_top.vhd
-- Created: 2019-07-22 16:41:57
-- 
-- Generated by MATLAB 9.5 and HDL Coder 3.13
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 2.74725e-10
-- Target subsystem base rate: 2.1978e-09
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        2.1978e-09
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- Out_InPhase_Branch_1          ce_out        2.1978e-09
-- Out_InPhase_Branch_2          ce_out        2.1978e-09
-- Out_InPhase_Branch_3          ce_out        2.1978e-09
-- Out_InPhase_Branch_4          ce_out        2.1978e-09
-- Out_Quadrature_Branch_1       ce_out        2.1978e-09
-- Out_Quadrature_Branch_2       ce_out        2.1978e-09
-- Out_Quadrature_Branch_3       ce_out        2.1978e-09
-- Out_Quadrature_Branch_4       ce_out        2.1978e-09
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DUC_FPGA_top
-- Source Path: DUC_simulink/DUC_FPGA_top
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DUC_FPGA_top IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        In_InPhase                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En9
        In_Quadrature                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En9
        ce_out                            :   OUT   std_logic;
        Out_InPhase_Branch_1              :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
        Out_InPhase_Branch_2              :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
        Out_InPhase_Branch_3              :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
        Out_InPhase_Branch_4              :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
        Out_Quadrature_Branch_1           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
        Out_Quadrature_Branch_2           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
        Out_Quadrature_Branch_3           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
        Out_Quadrature_Branch_4           :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En8
        );
END DUC_FPGA_top;


ARCHITECTURE rtl OF DUC_FPGA_top IS

  -- Component Declarations
  COMPONENT DUC_FPGA_top_timing_controller
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enable_1_8_0                    :   OUT   std_logic;
          enable_1_8_1                    :   OUT   std_logic;
          enable_1_64_1                   :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FIR_InPhase
    PORT( clk                             :   IN    std_logic;
          enable_1_64_1                   :   IN    std_logic;
          reset                           :   IN    std_logic;
          FIR_InPhase_in                  :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En9
          FIR_InPhase_out                 :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En9
          );
  END COMPONENT;

  COMPONENT CIC_Recursive_InPhase
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enable_1_8_1                    :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En9
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En9
          );
  END COMPONENT;

  COMPONENT CIC_Polyphase_InPhase
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enable_1_8_0                    :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En9
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
          Out2                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
          Out3                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
          Out4                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En8
          );
  END COMPONENT;

  COMPONENT FIR_Quadrature
    PORT( clk                             :   IN    std_logic;
          enable_1_64_1                   :   IN    std_logic;
          reset                           :   IN    std_logic;
          FIR_Quadrature_in               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En9
          FIR_Quadrature_out              :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En9
          );
  END COMPONENT;

  COMPONENT CIC_Recursive_Quadrature
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enable_1_8_1                    :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En9
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En9
          );
  END COMPONENT;

  COMPONENT CIC_Polyphase_Quadrature
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enable_1_8_0                    :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En9
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
          Out2                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
          Out3                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
          Out4                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En8
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : DUC_FPGA_top_timing_controller
    USE ENTITY work.DUC_FPGA_top_timing_controller(rtl);

  FOR ALL : FIR_InPhase
    USE ENTITY work.FIR_InPhase(rtl);

  FOR ALL : CIC_Recursive_InPhase
    USE ENTITY work.CIC_Recursive_InPhase(rtl);

  FOR ALL : CIC_Polyphase_InPhase
    USE ENTITY work.CIC_Polyphase_InPhase(rtl);

  FOR ALL : FIR_Quadrature
    USE ENTITY work.FIR_Quadrature(rtl);

  FOR ALL : CIC_Recursive_Quadrature
    USE ENTITY work.CIC_Recursive_Quadrature(rtl);

  FOR ALL : CIC_Polyphase_Quadrature
    USE ENTITY work.CIC_Polyphase_Quadrature(rtl);

  -- Signals
  SIGNAL enable_1_64_1                    : std_logic;
  SIGNAL enable_1_8_1                     : std_logic;
  SIGNAL enable_1_8_0                     : std_logic;
  SIGNAL FIR_InPhase_out1                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL CIC_Recursive_InPhase_out1       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL CIC_Polyphase_InPhase_out1       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL CIC_Polyphase_InPhase_out2       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL CIC_Polyphase_InPhase_out3       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL CIC_Polyphase_InPhase_out4       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL FIR_Quadrature_out1              : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL CIC_Recursive_Quadrature_out1    : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL CIC_Polyphase_Quadrature_out1    : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL CIC_Polyphase_Quadrature_out2    : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL CIC_Polyphase_Quadrature_out3    : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL CIC_Polyphase_Quadrature_out4    : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  -- CIC FILTER
  -- (Recursive)
  -- 
  -- FIR FILTER 
  -- (Mask and Compensator)
  -- 
  -- CIC FILTER 
  -- (Polyphase and Mixer)

  inst_DUC_FPGA_top_timing_controller : DUC_FPGA_top_timing_controller
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enable_1_8_0 => enable_1_8_0,
              enable_1_8_1 => enable_1_8_1,
              enable_1_64_1 => enable_1_64_1
              );

  inst_FIR_InPhase : FIR_InPhase
    PORT MAP( clk => clk,
              enable_1_64_1 => enable_1_64_1,
              reset => reset,
              FIR_InPhase_in => In_InPhase,  -- sfix16_En9
              FIR_InPhase_out => FIR_InPhase_out1  -- sfix16_En9
              );

  inst_CIC_Recursive_InPhase : CIC_Recursive_InPhase
    PORT MAP( clk => clk,
              reset => reset,
              enable_1_8_1 => enable_1_8_1,
              In1 => FIR_InPhase_out1,  -- sfix16_En9
              Out1 => CIC_Recursive_InPhase_out1  -- sfix16_En9
              );

  inst_CIC_Polyphase_InPhase : CIC_Polyphase_InPhase
    PORT MAP( clk => clk,
              reset => reset,
              enable_1_8_0 => enable_1_8_0,
              In1 => CIC_Recursive_InPhase_out1,  -- sfix16_En9
              Out1 => CIC_Polyphase_InPhase_out1,  -- sfix16_En8
              Out2 => CIC_Polyphase_InPhase_out2,  -- sfix16_En8
              Out3 => CIC_Polyphase_InPhase_out3,  -- sfix16_En8
              Out4 => CIC_Polyphase_InPhase_out4  -- sfix16_En8
              );

  inst_FIR_Quadrature : FIR_Quadrature
    PORT MAP( clk => clk,
              enable_1_64_1 => enable_1_64_1,
              reset => reset,
              FIR_Quadrature_in => In_Quadrature,  -- sfix16_En9
              FIR_Quadrature_out => FIR_Quadrature_out1  -- sfix16_En9
              );

  inst_CIC_Recursive_Quadrature : CIC_Recursive_Quadrature
    PORT MAP( clk => clk,
              reset => reset,
              enable_1_8_1 => enable_1_8_1,
              In1 => FIR_Quadrature_out1,  -- sfix16_En9
              Out1 => CIC_Recursive_Quadrature_out1  -- sfix16_En9
              );

  inst_CIC_Polyphase_Quadrature : CIC_Polyphase_Quadrature
    PORT MAP( clk => clk,
              reset => reset,
              enable_1_8_0 => enable_1_8_0,
              In1 => CIC_Recursive_Quadrature_out1,  -- sfix16_En9
              Out1 => CIC_Polyphase_Quadrature_out1,  -- sfix16_En8
              Out2 => CIC_Polyphase_Quadrature_out2,  -- sfix16_En8
              Out3 => CIC_Polyphase_Quadrature_out3,  -- sfix16_En8
              Out4 => CIC_Polyphase_Quadrature_out4  -- sfix16_En8
              );

  ce_out <= enable_1_8_1;

  Out_InPhase_Branch_1 <= CIC_Polyphase_InPhase_out1;

  Out_InPhase_Branch_2 <= CIC_Polyphase_InPhase_out2;

  Out_InPhase_Branch_3 <= CIC_Polyphase_InPhase_out3;

  Out_InPhase_Branch_4 <= CIC_Polyphase_InPhase_out4;

  Out_Quadrature_Branch_1 <= CIC_Polyphase_Quadrature_out1;

  Out_Quadrature_Branch_2 <= CIC_Polyphase_Quadrature_out2;

  Out_Quadrature_Branch_3 <= CIC_Polyphase_Quadrature_out3;

  Out_Quadrature_Branch_4 <= CIC_Polyphase_Quadrature_out4;

END rtl;
