-------------------------------------------------------------------------------------------------------------------------------------------------------
-- Author: Lucas Lui Motta 					@Copyright Unicamp, 2019
-- 													
-- Begin Date: 08/10/2019
--
-- Revision History:  	Date 		  	  Author 			Comments
--  						 	08/10/2019    L. L. Motta 		Created=
-------------------------------------------------------------------------------------------------------------------------------------------------------
-- Purpose:
-- This entity/architecture pair is a stage of the Digital Up Converter.
-------------------------------------------------------------------------------------------------------------------------------------------------------
--
-- Hierarchy Level: 1
-- 
-- Master clock enable input: clk_enable
-- 
-- enable_1_8_0: identical to clk_enable
-- enable_1_8_1: identical to clk_enable
-- enable_1_64_1: 8x slower than clk with phase 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DUC_FPGA_top_timing_controller IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        enable_1_8_0                      :   OUT   std_logic;
        enable_1_8_1                      :   OUT   std_logic;
        enable_1_64_1                     :   OUT   std_logic
        );
END DUC_FPGA_top_timing_controller;


ARCHITECTURE rtl OF DUC_FPGA_top_timing_controller IS

  -- Signals
  SIGNAL count8                           : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL phase_all                        : std_logic;
  SIGNAL phase_1                          : std_logic;
  SIGNAL phase_1_tmp                      : std_logic;

BEGIN
  Counter8 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      count8 <= to_unsigned(1, 3);
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        IF count8 >= to_unsigned(7, 3) THEN
          count8 <= to_unsigned(0, 3);
        ELSE
          count8 <= count8 + to_unsigned(1, 3);
        END IF;
      END IF;
    END IF; 
  END PROCESS Counter8;

  phase_all <= '1' WHEN clk_enable = '1' ELSE '0';

  temp_process1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      phase_1 <= '1';
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        phase_1 <= phase_1_tmp;
      END IF;
    END IF; 
  END PROCESS temp_process1;

  phase_1_tmp <= '1' WHEN count8 = to_unsigned(0, 3) AND clk_enable = '1' ELSE '0';

  enable_1_8_0 <=  phase_all AND clk_enable;

  enable_1_8_1 <=  phase_all AND clk_enable;

  enable_1_64_1 <=  phase_1 AND clk_enable;


END rtl;

